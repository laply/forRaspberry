> # 코드가 동작하는 기계
> sendTopic -- 각각의 기계에서 보낼 토픽
> takeTopic -- 각각의 기계에서 받을 토픽
> sendMessage -- 보낼 토픽 메세지 
> ~ Message -- 받을 토픽 메세지 


# raspberry
 - topic 
    sendTopic = ["tcs/rasp/temp", "tcs/rasp/humid",  "tcs/rasp/fire", "tcs/rasp/shock", 
    "tcs/rasp/ir", "tcs/rasp/clear", "tcs/rasp/localIp", "tcs/rasp/cameraPort",
     "test/rasp/broker"]
    
    TakeTopic = ["tcs/com", "tcs/phone", "tcs/detectServer"]

    computerMessage = ["start", "get", "ipPort"]
    phoneMessage = ["start", "get", "ipPort"]
    detectServerMessage = ["start", "ipPort", "true", "dStart", "dEnd"] 

# detectServer
 - topic 
    sendTopic = ["tcs/detectServer"]
    sendMessage = ["start", "ipPort", "true", "dStart", "dEnd"]
    
    takeTopic = ["tcs/rasp/localIp", "tcs/rasp/rcameraPort", "tcs/rasp/fire",
     "tcs/rasp/clear" ] 

# phone
 - topic 
    sendTopic = ["tcs/phone"]
    sendMessage = ["start", "get"]
    
    takeTopic = ["tcs/rasp/temp", "tcs/rasp/humid",  "tcs/rasp/fire", "tcs/rasp/shock", 
    "tcs/rasp/ir", "tcs/rasp/clear", "tcs/rasp/localIp", "tcs/rasp/cameraPort",
     "test/rasp/broker"]]
  
-- sensing info 
각각 6개의 센서 

temp/humid 
= (온도/습도) - 8~12 초 마다 한번 씩 보낸다.  

String 데이터 

형식
"Temperature : 온도값 C"
"Humidty : 습도값 %"

fire / shock / IR 
= (불꽃감지 / 충격 / 근접감지) - 일이 발생했을때 값을 출력

String 데이터 
형식 
"1" or "0"

clear 
= (버튼) - 물리적 클릭시 작동

String 데이터
형식 
"0" or "1"


-- 추가 된 내용
//클라이언트에서의 이벤트함수 
public void messageArrived(String arg0, MqttMessage arg1) throws Exception {
//arg0=sensorID+"/tcs/temp"or....or sensorID +"/tcs/clear/"
//sensorID 모델러가 실제 센서와 1:1 대응되는 3d 상의 센서 객체에 등록한 ID

//arg1=(기존의 값과 동일하게 해서 보낸다.)


}